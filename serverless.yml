service: ucom-aws

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:*"
    - Effect: Allow
      Action:
        - 'cognito-idp:*'
      Resource: "arn:aws:cognito-idp:${opt:region, self:provider.region}:*:*"
plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-pseudo-parameters
  - serverless-prune-plugin
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-layers

functions:
  - ${file(./functions/user.yml)}

resources:
  Resources:
    user:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: user
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        # Generate a name based on the stage
        UserPoolName: ${self:custom.stage}-ext-user-pool
        # Set email as an alias
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        # Generate an app client name based on the stage
        ClientName: ${self:custom.stage}-ext-user-pool-client
        UserPoolId:
          Ref: CognitoUserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        GenerateSecret: false

custom:
  serverless-offline:
    port: 4000
  webpack:
    webpackConfig: ./webpack.config.js
  prune:
    automatic: true
    number: 3
  serverless-layers:
    packageManger: npm
    compatibleRuntimes:
      - nodejs12.x
    layersDeploymentBucket: bolerplate-fun-lambda-layers-bucket
  env:
    StageName: ${self:service}-${self:provider.stage}
    region: eu-central-1

  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true,
      convertEmptyValues: true,
      seed: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true
    seed:
      domain:
        sources:
          - table: user
            sources: [./src/db/seed/user.json]
         
